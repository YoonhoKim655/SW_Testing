김이홍조 12주차 발표를 시작하겠습니다.
목차는 진행 상황 보고와 차후 진행 계획으로 진행되겠습니다.



첫번째로 저희가 사용하고 생성하는 자막의 형식을 결정하기 위해서 자막에 대한 조사를 했습니다.
첫 번째로 smi형식입니다. 
smi의 특징은 동영상과 자막 파일의 이름이 동일해야 자막이 표시가 되며
텍스트 편집기를 통해 작성과 편집이 가능합니다, 
또한 HTML 태그 및 CSS를 사용해서 style을 설정할 수 있습니다.
그리고 태그를 이용한 통합 자막으로 제작할 수 있다는 특징이 있습니다.
하지만 종료 싱크가 없어서 다음 자막 전까지 그 전 자막이 보이고,
거의 한국에서만 사용하는 호환성이 낮은 단점이 있습니다. 

smi의 구조로는 HTML과 유사하며,
body 태그 안의 내용 인식이 탁월한 특징을 가집니다. 
그리고 핵심 태그로는 싱크 태그로, start 속성을 가지며 시작시간을 초단위로 설정할 수있습니다.

두 번째는  srt 형식 입니다.
srt는 서브립 자막 추출 프로그램의 텍스트 자막 파일 확장자로
높은 호환성을 가지며,
HTML 태그를 사용할 수 있습니다.
또한 형식이 단순하고, smi와 달리 자막의 종료 시간 설정이 가능고
다른 종류의 자막 동시 출력이 아래와 같이 가능한 특징이 있습니다.

이 srt의 구조는 자막의 순서를 첫 줄에 작성하지만 생략이 가능하고,
다음 줄에 시작 시간, 종료 시간을 작성하고, 
마지막 줄에는 자막의 텍스트를 작성하는 구조로 되어 있습니다.


마지막 vtt 형식은 
웹브라우저 상에서 지원하는 HTML5 자막 포맷 WebVTT로
MIME 타입은 text/vtt이고,
파일 내 주석을 가질 수 있으며, 
css기반의 스타일을 설정할 수 있다는 특징을 가집니다.

이 vtt의 구조는 위에서 본 srt와 동일한 구조를 가집니다. 

그래서 저희가 결정한 자막 형식은 srt 또는 vtt파일로, 
이 두개의 형식은 smi 형식과 달리 자막을 생성하기 간단하기에 결정을 했습니다.

그리고 ODF파일을 사용하기 위한 2가지 라이브러리를 실습해보았습니다,
첫 번째로는 webODF로 ODF파일을 웹에서 출력할 수 있게 해주는 라이브러리 입니다.
이 라이브러리를 사용할 때, 일반 HTML파일에서는 보안상에 문제로 사용이 불가하기에,
로컬 서버를 이용해서 해결을 했습니다.

사용한 HTML파일을 보면 webodf.js라이브러리를 사용해서 
ODF캔버스 객체를 통해서 load함수를 통해 로컬 파일을 
이와 같이 출력할 수 있었습니다.

다음은 파일의 텍스트를 추출하는 textract라이브러리입니다.
해당 라이브러리는 npm을 통해서 설치하고 
사용법은 아래와 같이 textract pathtofile부분에 파일의 경로를 입력함으로써
사용가능하고 이와 같이 텍스트만을 출력하는 것을 알수 있습니다.
 

그리고 자막 파일과 ODF를 사용하기 위한 라이브러리들을 통해서 ODF 형식의 파일을 자막화 하기 위한 방법을 모색했습니다.
가장 먼저 파일에서 텍스트를 추출하고,
추출한 텍스트를 웹으로 가져와서
해당 텍스트와 매칭되는 영상의 시간을 추가해서 자막화를 하는 방식으로 구성을 했습니다.

동영상의 시간 정보를 가져오기 위해서 html video 태그의 currentTime 속성으로 
보이는 것과 같이 현재 영상의 정확한 위치를 가져올 수 있습니다.
그래서 저희가 생각한 바로는 보이는 것과 같이 
버튼하나로 사용자가 원하는 시점에 자막을 삽입하는 것이 가능할 것이라고 생각합니다.

차후 진행 계획은 
19일에 멘토님을 만나서 현재까지의 진행 상황을 보고 및 검토하며,
 구현의 방향성을 확정할 것입니다.

그리고 진행한 내용들을 바탕으로 특허 출원 명세서 작성을 시작할 것입니다.

이것으로 12주차 김이홍조의 발표를 마치겠습니다. 감사합니다.
 
